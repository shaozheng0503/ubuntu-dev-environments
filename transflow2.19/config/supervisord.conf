# =============================================================================
# Supervisord 进程管理配置文件
# =============================================================================
# 功能说明：
# 1. 管理 SSH 服务进程
# 2. 管理 VSCode Server 进程
# 3. 管理 JupyterLab 进程
# 4. 确保服务自动重启和日志输出
# 
# 运行模式：前台运行，适合 Docker 容器环境
# 日志输出：重定向到容器标准输出，便于 Docker 日志查看
# =============================================================================

# =============================================================================
# 全局配置段
# =============================================================================
[supervisord]
# 前台运行模式：不在后台运行，保持在前台
# 这是 Docker 容器环境的标准配置，确保容器不会立即退出
nodaemon=true

# =============================================================================
# SSH 服务配置段
# =============================================================================
[program:sshd]
# 启动命令：启动 SSH 守护进程
# -D 参数表示在前台运行，不进入后台
command=/usr/sbin/sshd -D

# 自动启动：容器启动时自动启动此服务
autostart=true

# 自动重启：服务异常退出时自动重启
# 确保 SSH 服务的持续可用性
autorestart=true

# 日志配置：将标准输出重定向到容器日志
# 便于通过 docker logs 命令查看 SSH 服务日志
stdout_logfile=/dev/stdout

# 错误日志配置：将错误输出重定向到容器日志
# 便于排查 SSH 服务问题
stderr_logfile=/dev/stderr

# =============================================================================
# VSCode Server 配置段
# =============================================================================
[program:code-server]
# 启动命令：启动 VSCode Server
# --bind-addr 指定监听地址和端口
command=/usr/bin/code-server --bind-addr 0.0.0.0:62661

# 自动启动：容器启动时自动启动此服务
autostart=true

# 自动重启：服务异常退出时自动重启
# 确保 VSCode Server 的持续可用性
autorestart=true

# 日志配置：将标准输出重定向到容器日志
stdout_logfile=/dev/stdout

# 错误日志配置：将错误输出重定向到容器日志
stderr_logfile=/dev/stderr

# =============================================================================
# JupyterLab 配置段
# =============================================================================
[program:jupyterlab]
# 启动命令：启动 JupyterLab 服务
# --ip=0.0.0.0 监听所有网络接口
# --port=8888 使用 8888 端口
# --allow-root 允许以 root 用户运行
# --no-browser 不自动打开浏览器
command=/opt/miniconda3/bin/jupyter-lab --ip=0.0.0.0 --port=8888 --allow-root --no-browser

# 工作目录：设置 JupyterLab 的工作目录为 root 用户目录
# 确保文件操作在正确的目录中进行
directory=/root

# 自动启动：容器启动时自动启动此服务
autostart=true

# 自动重启：服务异常退出时自动重启
# 确保 JupyterLab 的持续可用性
autorestart=true

# 日志配置：将标准输出重定向到容器日志
stdout_logfile=/dev/stdout

# 错误日志配置：将错误输出重定向到容器日志
stderr_logfile=/dev/stderr

# 环境变量配置：设置必要的环境变量
# HOME 设置用户主目录
# PATH 确保 Python 解释器路径正确
environment=HOME="/root",PATH="/opt/miniconda3/bin:%(ENV_PATH)s"