FROM nvidia/cuda:12.2.2-cudnn8-devel-ubuntu22.04

# 配置国内镜像源
RUN sed -i 's/archive.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list && \
    sed -i 's/security.ubuntu.com/mirrors.aliyun.com/g' /etc/apt/sources.list

# 更新包列表并安装 wget
RUN apt-get update && \
    apt-get install -y wget && \
    rm -rf /var/lib/apt/lists/*

# 安装并配置 Miniconda
RUN wget -q https://repo.anaconda.com/miniconda/Miniconda3-latest-Linux-x86_64.sh  \
    && bash Miniconda3-latest-Linux-x86_64.sh -b -p /opt/miniconda3 \
    && rm Miniconda3-latest-Linux-x86_64.sh \
    && echo "PATH=/opt/miniconda3/bin:\$PATH" >> /etc/profile \
    && /opt/miniconda3/bin/conda init bash \
    # 先接受默认频道的服务条款
    && /opt/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/main \
    && /opt/miniconda3/bin/conda tos accept --override-channels --channel https://repo.anaconda.com/pkgs/r \
    # 配置清华镜像源（更新URL）
    && /opt/miniconda3/bin/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/main/ \
    && /opt/miniconda3/bin/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/pkgs/free/ \
    && /opt/miniconda3/bin/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/conda-forge/ \
    && /opt/miniconda3/bin/conda config --add channels https://mirrors.tuna.tsinghua.edu.cn/anaconda/cloud/pytorch/ \
    && /opt/miniconda3/bin/conda config --set show_channel_urls yes

# 配置 pip 清华源
RUN mkdir -p /root/.pip \
    && printf "[global]\nindex-url = https://pypi.tuna.tsinghua.edu.cn/simple \ntrusted-host = pypi.tuna.tsinghua.edu.cn\n" > /root/.pip/pip.conf

# 将 base 环境的 Python 升级为 3.12
RUN /opt/miniconda3/bin/conda install -y python=3.12

# 安装 Node.js（更新NodeSource源URL）
RUN apt-get update && apt-get install -y --no-install-recommends \
    curl ca-certificates gnupg \
    && mkdir -p /etc/apt/keyrings \
    && curl -fsSL https://deb.nodesource.com/gpgkey/nodesource-repo.gpg.key | gpg --dearmor -o /etc/apt/keyrings/nodesource.gpg \
    && echo "deb [signed-by=/etc/apt/keyrings/nodesource.gpg] https://deb.nodesource.com/node_20.x nodistro main" | tee /etc/apt/sources.list.d/nodesource.list \
    && apt-get update && apt-get install -y nodejs \
    && rm -rf /var/lib/apt/lists/*

# 安装 JupyterLab
RUN /opt/miniconda3/bin/pip install jupyterlab==4.4.4

# 安装 pip 依赖（后端）
RUN /opt/miniconda3/bin/pip install \
    jupyterlab-lsp \
    python-lsp-server[all] \
    ipympl \
    jupyterlab-katex \
    ipykernel

# 安装 JupyterLab 插件（前端）
RUN /opt/miniconda3/bin/jupyter labextension install \
    @jupyterlab/toc \
    @jupyterlab/htmlviewer

# 安装 TensorFlow 2.19（适配CUDA 11.8）
RUN /opt/miniconda3/bin/pip install tensorflow==2.18.*

# 复制配置文件
COPY config/supervisord.conf /etc/supervisord.conf
COPY init/init.sh /init/init.sh
COPY config/settings.json  /tmp/settings.json
RUN chmod +x /init/init.sh

# 设置环境变量
ARG SSH_PASSWORD=123456
ENV SSH_PASSWORD=${SSH_PASSWORD} \
    PATH=/usr/local/cuda-11.8/bin:$PATH \
    LD_LIBRARY_PATH=/usr/local/cuda-11.8/lib64:$LD_LIBRARY_PATH

# 暴露端口
EXPOSE 22 62661 8888

# 安装net-tools
RUN apt-get update && \
    apt-get install -y \
        net-tools && \
    rm -rf /var/lib/apt/lists/*

# 安装常用工具（适配Ubuntu 22.04）
RUN apt update && \
    DEBIAN_FRONTEND=noninteractive apt install -y \
    screen openssh-server supervisor gnupg2 && \
    mkdir -p /var/run/sshd && \
    mkdir -p /init

# 安装vscode server
RUN curl -fsSL https://code-server.dev/install.sh | sh

# 默认变量-用户名和密码
ENV SSH_USER=gongji

# 启动命令
CMD ["/init/init.sh"]